name: 3. Test Runner ✨
on: [workflow_call, workflow_dispatch]

env:
  UNITY_LICENSE: ${{ secrets.UNITY_LICENSE }}
  
jobs:
  testRunner:
      name: Test in ${{ matrix.testMode }} ✨
      runs-on: ubuntu-latest
      strategy:
        fail-fast: false
        matrix:
          testMode:
            #- EditMode
            - PlayMode
      steps:
        - name: Checkout code
          uses: actions/checkout@v3
          with:
            node-version: 16

        - name: Create LFS file list
          run: git lfs ls-files -l | cut -d' ' -f1 | sort > .lfs-assets-id
          
        - name: Restore LFS cache
          uses: actions/cache@v3
          id: lfs-cache
          with:
            node-version: 16
            path: .git/lfs
            key: ${{ runner.os }}-lfs-${{ hashFiles('.lfs-assets-id') }}
            
        - name: Git LFS Pull
          run: |
            git lfs pull
            git add .
            git reset --hard
            
        - name: Restore Library cache
          uses: actions/cache@v3
          with:
            node-version: 16
            path: Library
            key: Library-test-project-${{ matrix.targetPlatform }}
            restore-keys: |
              Library-test-project-
              Library-
              
        - name: Run tests
          uses: game-ci/unity-test-runner@v2
          id: testRunner
          with:
            node-version: 16
            testMode: ${{ matrix.testMode }}
            checkName: ${{ matrix.testMode }} test results
            githubToken: ${{ secrets.GITHUB_TOKEN }}

        - uses: actions/upload-artifact@v3
          with:
            node-version: 16
            name: Test results (${{ matrix.testMode }})
            path: ${{ steps.testRunner.outputs.artifactsPath }}
